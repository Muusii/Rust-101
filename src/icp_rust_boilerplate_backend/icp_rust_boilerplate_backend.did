type Error = variant {
  NotFound : record { msg : text };
  Unauthorized : record { msg : text };
  Validate : record { msg : text };
};
type Property = record {
  id : nat64;
  owner_public_key : vec nat8;
  description : text;
  address : text;
  price : float64;
};
type PropertyPayload = record {
  owner_public_key : vec nat8;
  description : text;
  address : text;
  price : float64;
};
type Result = variant { Ok : Property; Err : Error };
type Result_1 = variant { Ok : vec Property; Err : Error };
service : {
  add_property : (PropertyPayload) -> (Result);
  delete_property : (nat64) -> (Result);
  get_properties : () -> (Result_1) query;
  get_property_by_id : (nat64) -> (Result) query;
  transfer_property_ownership : (nat64, vec nat8) -> (Result);
  update_property : (nat64, PropertyPayload) -> (Result);
}
